#ifndef C_CUDA_TIME_SPENT_H
#define C_CUDA_TIME_SPENT_H

//****************************************************************************************************
//класс измерения времени выполнения
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************

#include <stdio.h>
#include <stdint.h>

#include <cuda_runtime.h>
#include <cuda_runtime_api.h>

#include "handle_error.cu.h"

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//класс измерения времени выполнения
//****************************************************************************************************
class CCUDATimeSpent
{
 public:
  //-перечисления---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 public:
  //-переменные-----------------------------------------------------------------------------------------
  cudaEvent_t StartEvent;
  cudaEvent_t StopEvent;
 private:
  public:
  //-конструктор----------------------------------------------------------------------------------------
  __host__ CCUDATimeSpent(void);
  //-деструктор-----------------------------------------------------------------------------------------
  __host__ ~CCUDATimeSpent();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  void Start(void);//начать измерение времени
  float Stop(void);//завершить измерение времени и получить результат в миллисекундах
 private:
  //-закрытые функции-----------------------------------------------------------------------------------
};
#endif
